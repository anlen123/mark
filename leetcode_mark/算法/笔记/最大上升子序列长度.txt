#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <cctype>
#include <queue>
#include <map>
#include <string>
#include <vector>
#include <set>
#include <math.h>
#include <stack>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <time.h>
#define ll long long
#define chushihua(x,y) memset(x,y,sizeof x)
using namespace std;
const ll MAXX = 1000000 + 10;
const double PI = 3.14159265358979323846;
const ll mod = 1000000007;
int dp[50];
int a[50];
int main() {
	int n;
	cin >> n;
	for (int i = 0; i < n; i++) {
		scanf("%d", &a[i]);
		dp[i] = 1;
	}
	int ans = 0;
	for (int i = 1; i < n; i++) {
		for (int j = 0; j < i; j++) {
			if (a[i] > a[j]) {
				dp[i] = max(dp[i], dp[j] + 1);
			}
		}
		ans = max(ans, dp[i]);
	}
	cout << ans << endl;
	return 0;
}

#include<iostream>
#include<cstring>
#include<cstdio>
#include<cmath>
#include<algorithm>
using namespace std;
typedef long long ll;
const int maxn = 100005;
int sz[maxn],tp[maxn]; //
int n=1;
int p=1;
int main(){
	while(cin>>sz[n]) n++;
	tp[1] = sz[1];
	for(int i=2;i<n;i++){
		if(sz[i] <= tp[p]) tp[++p] = sz[i];//注意<= 最长不上升 
		else{
			int l=1,r=p,mid=p>>1;
			while(l!=r){
				if(sz[i] > tp[mid]) r = mid;
				else l = mid+1;
				mid = (l+r)>>1;
			}
			tp[l] = sz[i];
		}
	}
	cout<<p<<endl;
	memset(tp,0,sizeof(tp));
	tp[1]=sz[1];
	p=1;
	for(int i=2;i<=n;i++){
		if(sz[i] > tp[p]) tp[++p] = sz[i];
		else{
			int l=1,r=p,mid=p>>1;
			while(l!=r){
				if(sz[i] <= tp[mid] ) r = mid;
				else l = mid+1;
				mid = (l+r)>>1;
			}
			tp[l] = sz[i];
		}
	}
	cout<<p<<endl;
	return 0;
}